using PredicateBuilder.Test.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace PredicateBuilder.Test.Data
{
    public class PhoneNumberGenerator
    {
        private static readonly Random Random = new Random(Environment.TickCount);

        /// <summary>
        /// https://www.iban.com/dialing-codes
        /// </summary>
        public static readonly Dictionary<string, string> CountryCallingCodeMap = new Dictionary<string, string>
        {
            { "Afghanistan", "93" },
            { "Albania", "355" },
            { "Algeria", "213" },
            { "American Samoa", "1" },
            { "Andorra", "376" },
            { "Angola", "244" },
            { "Anguilla", "1" },
            { "Antigua and Barbuda", "1" },
            { "Argentina", "54" },
            { "Armenia", "374" },
            { "Aruba", "297" },
            { "Australia", "61" },
            { "Australian External Territories", "672" },
            { "Austria", "43" },
            { "Azerbaijan", "994" },
            { "Bahamas", "1" },
            { "Bahrain", "973" },
            { "Bangladesh", "880" },
            { "Barbados", "1" },
            { "Belarus", "375" },
            { "Belgium", "32" },
            { "Belize", "501" },
            { "Benin", "229" },
            { "Bermuda", "1" },
            { "Bhutan", "975" },
            { "Bolivia (Plurinational State of)", "591" },
            { "Bonaire, Sint Eustatius and Saba", "599" },
            { "Bosnia and Herzegovina", "387" },
            { "Botswana", "267" },
            { "Brazil", "55" },
            { "British Virgin Islands", "1" },
            { "Brunei Darussalam", "673" },
            { "Bulgaria", "359" },
            { "Burkina Faso", "226" },
            { "Burundi", "257" },
            { "Cambodia", "855" },
            { "Cameroon", "237" },
            { "Canada", "1" },
            { "Cape Verde", "238" },
            { "Cayman Islands", "1" },
            { "Central African Rep.", "236" },
            { "Chad", "235" },
            { "Chile", "56" },
            { "China", "86" },
            { "Colombia", "57" },
            { "Comoros", "269" },
            { "Congo", "242" },
            { "Cook Islands", "682" },
            { "Costa Rica", "506" },
            { "Côte d'Ivoire", "225" },
            { "Croatia", "385" },
            { "Cuba", "53" },
            { "Curaçao", "599" },
            { "Cyprus", "357" },
            { "Czech Rep.", "420" },
            { "Dem. People's Rep. of Korea", "850" },
            { "Dem. Rep. of the Congo", "243" },
            { "Denmark", "45" },
            { "Diego Garcia", "246" },
            { "Djibouti", "253" },
            { "Dominica", "1" },
            { "Dominican Rep.", "1" },
            { "Ecuador", "593" },
            { "Egypt", "20" },
            { "El Salvador", "503" },
            { "Equatorial Guinea", "240" },
            { "Eritrea", "291" },
            { "Estonia", "372" },
            { "Ethiopia", "251" },
            { "Falkland Islands (Malvinas)", "500" },
            { "Faroe Islands", "298" },
            { "Fiji", "679" },
            { "Finland", "358" },
            { "France", "33" },
            { "French Dep. and Territories in the Indian Ocean", "262" },
            { "French Guiana", "594" },
            { "French Polynesia", "689" },
            { "Gabon", "241" },
            { "Gambia", "220" },
            { "Georgia", "995" },
            { "Germany", "49" },
            { "Ghana", "233" },
            { "Gibraltar", "350" },
            { "Global Mobile Satellite System (GMSS), shared", "881" },
            { "Greece", "30" },
            { "Greenland", "299" },
            { "Grenada", "1" },
            { "Group of countries, shared code", "388" },
            { "Guadeloupe", "590" },
            { "Guam", "1" },
            { "Guatemala", "502" },
            { "Guinea", "224" },
            { "Guinea-Bissau", "245" },
            { "Guyana", "592" },
            { "Haiti", "509" },
            { "Honduras", "504" },
            { "Hong Kong, China", "852" },
            { "Hungary", "36" },
            { "Iceland", "354" },
            { "India", "91" },
            { "Indonesia", "62" },
            { "Inmarsat SNAC", "870" },
            { "International Freephone Service", "800" },
            { "International Networks, shared code 882", "882" },
            { "International Networks, shared code 883", "883" },
            { "International Premium Rate Service (IPRS)", "979" },
            { "International Shared Cost Service (ISCS)", "808" },
            { "Iran (Islamic Republic of)", "98" },
            { "Iraq", "964" },
            { "Ireland", "353" },
            { "Israel", "972" },
            { "Italy", "39" },
            { "Jamaica", "1" },
            { "Japan", "81" },
            { "Jordan", "962" },
            { "Kazakhstan", "7" },
            { "Kenya", "254" },
            { "Kiribati", "686" },
            { "Korea (Rep. of)", "82" },
            { "Kuwait", "965" },
            { "Kyrgyzstan", "996" },
            { "Lao P.D.R.", "856" },
            { "Latvia", "371" },
            { "Lebanon", "961" },
            { "Lesotho", "266" },
            { "Liberia", "231" },
            { "Libya", "218" },
            { "Liechtenstein", "423" },
            { "Lithuania", "370" },
            { "Luxembourg", "352" },
            { "Macao, China", "853" },
            { "Madagascar", "261" },
            { "Malawi", "265" },
            { "Malaysia", "60" },
            { "Maldives", "960" },
            { "Mali", "223" },
            { "Malta", "356" },
            { "Marshall Islands", "692" },
            { "Martinique", "596" },
            { "Mauritania", "222" },
            { "Mauritius", "230" },
            { "Mexico", "52" },
            { "Micronesia", "691" },
            { "Moldova (Republic of)", "373" },
            { "Monaco", "377" },
            { "Mongolia", "976" },
            { "Montenegro", "382" },
            { "Montserrat", "1" },
            { "Morocco", "212" },
            { "Mozambique", "258" },
            { "Myanmar", "95" },
            { "Namibia", "264" },
            { "Nauru", "674" },
            { "Nepal", "977" },
            { "Netherlands", "31" },
            { "New Caledonia", "687" },
            { "New Zealand", "64" },
            { "Nicaragua", "505" },
            { "Niger", "227" },
            { "Nigeria", "234" },
            { "Niue", "683" },
            { "Northern Marianas", "1" },
            { "Norway", "47" },
            { "Oman", "968" },
            { "Pakistan", "92" },
            { "Palau", "680" },
            { "Panama", "507" },
            { "Papua New Guinea", "675" },
            { "Paraguay", "595" },
            { "Peru", "51" },
            { "Philippines", "63" },
            { "Poland", "48" },
            { "Portugal", "351" },
            { "Puerto Rico", "1" },
            { "Qatar", "974" },
            { "Romania", "40" },
            { "Russian Federation", "7" },
            { "Rwanda", "250" },
            { "Saint Helena, Ascension and Tristan da Cunha 247", "247" },
            { "Saint Helena, Ascension and Tristan da Cunha 290", "290" },
            { "Saint Kitts and Nevis", "1" },
            { "Saint Lucia", "1" },
            { "Saint Pierre and Miquelon", "508" },
            { "Saint Vincent and the Grenadines", "1" },
            { "Samoa", "685" },
            { "San Marino", "378" },
            { "Sao Tome and Principe", "239" },
            { "Saudi Arabia", "966" },
            { "Senegal", "221" },
            { "Serbia", "381" },
            { "Seychelles", "248" },
            { "Sierra Leone", "232" },
            { "Singapore", "65" },
            { "Sint Maarten (Dutch part)", "1" },
            { "Slovakia", "421" },
            { "Slovenia", "386" },
            { "Solomon Islands", "677" },
            { "Somalia", "252" },
            { "South Africa", "27" },
            { "South Sudan", "211" },
            { "Spain", "34" },
            { "Sri Lanka", "94" },
            { "Sudan", "249" },
            { "Suriname", "597" },
            { "Swaziland", "268" },
            { "Sweden", "46" },
            { "Switzerland", "41" },
            { "Syrian Arab Republic", "963" },
            { "Taiwan, China", "886" },
            { "Tajikistan", "992" },
            { "Tanzania", "255" },
            { "Telecommunications for Disaster Relief (TDR)", "888" },
            { "Thailand", "66" },
            { "The Former Yugoslav Republic of Macedonia", "389" },
            { "Timor-Leste", "670" },
            { "Togo", "228" },
            { "Tokelau", "690" },
            { "Tonga", "676" },
            { "Trial of a proposed new international service", "991" },
            { "Trinidad and Tobago", "1" },
            { "Tunisia", "216" },
            { "Turkey", "90" },
            { "Turkmenistan", "993" },
            { "Turks and Caicos Islands", "1" },
            { "Tuvalu", "688" },
            { "Uganda", "256" },
            { "Ukraine", "380" },
            { "United Arab Emirates", "971" },
            { "United Kingdom", "44" },
            { "United States", "1" },
            { "United States Virgin Islands", "1" },
            { "Universal Personal Telecommunication (UPT)", "878" },
            { "Uruguay", "598" },
            { "Uzbekistan", "998" },
            { "Vanuatu", "678" },
            { "Vatican 379", "379" },
            { "Vatican 39", "39" },
            { "Venezuela (Bolivarian Republic of)", "58" },
            { "Viet Nam", "84" },
            { "Wallis and Futuna", "681" },
            { "Yemen", "967" },
            { "Zambia", "260" },
            { "Zimbabwe", "263" },
            { "Reserved", "970" }
        };

        public static readonly List<string> CountryCallingCodes = CountryCallingCodeMap.Values.Distinct().ToList();

        public static readonly Dictionary<string, List<string>> USAreaCodes = new Dictionary<string, List<string>>
        {
            { "Alabama", new List<string>(new [] { "205", "251", "256", "334", "938" }) },
            { "Alaska", new List<string>(new [] { "907" }) },
            { "American Samoa", new List<string>(new [] { "684" }) },
            { "Arizona", new List<string>(new [] { "480", "520", "602", "623", "928" }) },
            { "Arkansas", new List<string>(new [] { "479", "501", "870" }) },
            { "California", new List<string>(new [] { "209", "213", "310", "323", "408", "415", "424", "442", "510", "530", "559", "562", "619", "626", "628", "650", "657", "661", "669", "707", "714", "747", "760", "805", "818", "831", "858", "909", "916", "925", "949", "951" }) },
            { "Colorado", new List<string>(new [] { "303", "719", "720", "970" }) },
            { "Connecticut", new List<string>(new [] { "203", "475", "860", "959" }) },
            { "Delaware", new List<string>(new [] { "302" }) },
            { "Florida", new List<string>(new [] { "239", "305", "321", "352", "386", "407", "561", "727", "754", "772", "786", "813", "850", "863", "904", "941", "954" }) },
            { "Georgia", new List<string>(new [] { "229", "404", "470", "478", "678", "706", "762", "770", "912" }) },
            { "Guam", new List<string>(new [] { "671" }) },
            { "Hawaii", new List<string>(new [] { "808" }) },
            { "Idaho", new List<string>(new [] { "208" }) },
            { "Illinois", new List<string>(new [] { "217", "224", "309", "312", "331", "618", "630", "708", "773", "779", "815", "847", "872" }) },
            { "Indiana", new List<string>(new [] { "219", "260", "317", "463", "574", "765", "812", "930" }) },
            { "Iowa", new List<string>(new [] { "319", "515", "563", "641", "712" }) },
            { "Kansas", new List<string>(new [] { "316", "620", "785", "913" }) },
            { "Kentucky", new List<string>(new [] { "270", "364", "502", "606", "859" }) },
            { "Louisiana", new List<string>(new [] { "225", "318", "337", "504", "985" }) },
            { "Maine", new List<string>(new [] { "207" }) },
            { "Maryland", new List<string>(new [] { "240", "301", "410", "443", "667" }) },
            { "Massachusetts", new List<string>(new [] { "339", "351", "413", "508", "617", "774", "781", "857", "978" }) },
            { "Michigan", new List<string>(new [] { "231", "248", "269", "313", "517", "586", "616", "734", "810", "906", "947", "989" }) },
            { "Minnesota", new List<string>(new [] { "218", "320", "507", "612", "651", "763", "952" }) },
            { "Mississippi", new List<string>(new [] { "228", "601", "662", "769" }) },
            { "Missouri", new List<string>(new [] { "314", "417", "573", "636", "660", "816" }) },
            { "Montana", new List<string>(new [] { "406" }) },
            { "Nebraska", new List<string>(new [] { "308", "402", "531" }) },
            { "Nevada", new List<string>(new [] { "702", "725", "775" }) },
            { "New Hampshire", new List<string>(new [] { "603" }) },
            { "New Jersey", new List<string>(new [] { "201", "551", "609", "732", "848", "856", "862", "908", "973" }) },
            { "New Mexico", new List<string>(new [] { "505", "575" }) },
            { "New York", new List<string>(new [] { "212", "315", "332", "347", "516", "518", "585", "607", "631", "646", "680", "716", "718", "845", "914", "917", "929", "934" }) },
            { "North Carolina", new List<string>(new [] { "252", "336", "704", "743", "828", "910", "919", "980", "984" }) },
            { "North Dakota", new List<string>(new [] { "701" }) },
            { "Northern Mariana Islands", new List<string>(new [] { "670" }) },
            { "Ohio", new List<string>(new [] { "216", "220", "234", "330", "380", "419", "440", "513", "567", "614", "740", "937" }) },
            { "Oklahoma", new List<string>(new [] { "405", "539", "580", "918" }) },
            { "Oregon", new List<string>(new [] { "458", "503", "541", "971" }) },
            { "Pennsylvania", new List<string>(new [] { "215", "267", "272", "412", "484", "570", "610", "717", "724", "814", "878" }) },
            { "Puerto Rico", new List<string>(new [] { "787", "939" }) },
            { "Rhode Island", new List<string>(new [] { "401" }) },
            { "South Carolina", new List<string>(new [] { "803", "843", "854", "864" }) },
            { "South Dakota", new List<string>(new [] { "605" }) },
            { "Tennessee", new List<string>(new [] { "423", "615", "629", "731", "865", "901", "931" }) },
            { "Texas", new List<string>(new [] { "210", "214", "254", "281", "325", "346", "361", "409", "430", "432", "469", "512", "682", "713", "737", "806", "817", "830", "832", "903", "915", "936", "940", "956", "972", "979" }) },
            { "Utah", new List<string>(new [] { "385", "435", "801" }) },
            { "Vermont", new List<string>(new [] { "802" }) },
            { "Virgin Islands", new List<string>(new [] { "340" }) },
            { "Virginia", new List<string>(new [] { "276", "434", "540", "571", "703", "757", "804" }) },
            { "Washington", new List<string>(new [] { "206", "253", "360", "425", "509" }) },
            { "District of Columbia", new List<string>(new [] { "202" }) },
            { "West Virginia", new List<string>(new [] { "304", "681" }) },
            { "Wisconsin", new List<string>(new [] { "262", "414", "534", "608", "715", "920" }) },
            { "Wyoming", new List<string>(new [] { "307" }) }
        };

        public static string GetUS555TelephoneNumber()
        {
            List<List<string>> usAreaCodesList = USAreaCodes.Values.ToList();
            int usStateIndex = Random.Next() % USAreaCodes.Count;
            List<string> areaCodes = usAreaCodesList[usStateIndex];
            string areaCode = areaCodes.Count == 1 ? areaCodes[0] : areaCodes[Random.Next() % areaCodes.Count];
            return string.Format("{0}-555-{1}{2}{3}{4}",
                areaCode,
                Random.Next() % 10, Random.Next() % 10, Random.Next() % 10, Random.Next() % 10);
        }

        public static string GetUSTelephoneNumber()
        {
            List<List<string>> usAreaCodesList = USAreaCodes.Values.ToList();
            int usStateIndex = Random.Next() % USAreaCodes.Count;
            List<string> areaCodes = usAreaCodesList[usStateIndex];
            string areaCode = areaCodes.Count == 1 ? areaCodes[0] : areaCodes[Random.Next() % areaCodes.Count];
            return string.Format("{0}-{1}{2}{3}-{4}{5}{6}{7}",
                areaCode,
                Random.Next() % 10, Random.Next() % 10, Random.Next() % 10,
                Random.Next() % 10, Random.Next() % 10, Random.Next() % 10, Random.Next() % 10);
        }

        public static string GetTelephoneExtension()
        {
            StringBuilder sb = new StringBuilder();
            int numDigits = Random.Next() % 10;
            for (int count = 0; count < numDigits; ++count)
            {
                sb.Append(Random.Next() % 10);
            }
            return sb.ToString();
        }

        public static PhoneNumberDto GetPhoneNumber(int personId, bool isPrimary = false)
        {
            int phoneNumberType = Random.Next() % 100;
            phoneNumberType = phoneNumberType < 3 ? phoneNumberType : 99;

            PhoneNumberDto entity = new PhoneNumberDto
            {
                PersonId = personId,
                CountryCallingCode = CountryCallingCodes[Random.Next() % CountryCallingCodes.Count],
                Number = GetUS555TelephoneNumber(),
                IsPrimary = isPrimary,
                PhoneNumberType = (PhoneNumberType)phoneNumberType
            };
            return entity;
        }
    }
}
